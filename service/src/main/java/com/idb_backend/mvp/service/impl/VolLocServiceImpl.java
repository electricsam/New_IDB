package com.idb_backend.mvp.service.impl;

import com.idb_backend.mvp.domain.model.VolLocTsqpProjection;
import com.idb_backend.mvp.domain.repository.VolLocTsqpRepository;
import com.idb_backend.mvp.service.BaseService;
import com.idb_backend.mvp.service.VolLocService;
import com.querydsl.core.types.Predicate;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.util.Map;

@Service
public class VolLocServiceImpl extends BaseService implements VolLocService{

  @Autowired
  VolLocTsqpRepository volcanoLocRepository;

  /**
   * Returns Iterable object of VolLocTsqpProjection objects generated by calling specific query that resides in the
   * repository.  The specific query called is determined by the existance of certian params in a Map object.
   *
   * @param params
   * @param predicate
   * @return
   */
  @Override
  public Iterable<VolLocTsqpProjection> getVolLocs(Map<String, String> params, Predicate predicate){
    if(params.get("eventid") != null && !params.get("eventid").equals("")){
      return volcanoLocRepository.findRelatedVolcanoLocFromEvent(Integer.parseInt(params.get("eventid")));
    }else{
      return volcanoLocRepository.findByQuery(predicate);
    }
  }
}
